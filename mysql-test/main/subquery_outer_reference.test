#
# This file is for tests for other features that happen to use 
# subqueries. The idea is that one should be able to run
#
#   ./mysql-test-run t/subselect*.test
#
# and get as much subquery testing as possible.
#
--source include/default_optimizer_switch.inc

--echo #
--echo # MDEV-32294 2nd execution problem with inconsistent outer context paths
--echo #

SELECT * FROM (
    WITH RECURSIVE x ( a ) AS ( SELECT 1 UNION SELECT a FROM x )
    SELECT * FROM x
    WHERE a IN (
        SELECT a FROM x WHERE ( SELECT 1 GROUP BY a HAVING ( a ) )
        )
) as dt ;

create table t1 (t1a int, t1b int, t1c int) engine=myisam;
insert into t1 values (1, 1, 1), (2, 2, 2), (3, 3, 3);

create table t2 (t2a int, t2b int, t2c int) engine=myisam;
insert into t2 values (1, 1, 1), (2, 2, 2), (3, 3, 3);

create table t3 (t3a int, t3b int, t3c int) engine=myisam;
insert into t3 values (1, 1, 1), (2, 2, 2), (3, 3, 3);

create table t4 (t4a int, t4b int, t4c int) engine=myisam;
insert into t4 values (1, 1, 1), (2, 2, 2), (3, 3, 3);

create table t5 (t5a int, t5b int, t5c int) engine=myisam;
insert into t5 values (1, 1, 1), (2, 2, 2), (3, 3, 3);

create table t6 (t6a int, t6b int, t6c int) engine=myisam;
insert into t6 values (1, 1, 1), (2, 2, 2), (3, 3, 3);

create table t7 (t7a int, t7b int, t7c int) engine=myisam;
insert into t7 values (1, 1, 1), (2, 2, 2), (3, 3, 3);

let $q=select t1a from t1
where t1a in
(
  select t2c from t2 where t2a >= some
  (
    select t3a from t3 where t1b=t3b
  )
);
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo rewrite query
let $q=select t1a from t1
where t1a in
(
  select t2c from t2
    where (select t3a from t3 where t1b=t3b and t2a>t3a) <> 0
);
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo The root of the problem, outer reference but no merge yet
let $q=select * from t1
  where t1c in
  (
    select t2a from t2
       where (select t3a from t3 where t1b=t3b and t2a>t3a) <> 0
  );
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo reference to top select, it isn't merged into anything
let $q=select * from
(
  select * from t1
    where t1c in
    (
       select t2a from t2
         where (select t3b from t3 where t3a > t1a limit 1) <> 0
    )
) dt;
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo basic tower
let $q=select * from
(
  select * from t1
    where t1c in
    (
       select t2a from t2
         where t2a < any(select t3b from t3)
    )
) dt;
eval $q;
eval prepare s from '$q';
execute s;
execute s;

let $q=select * from
(
  select * from t1
    where t1c in
    (
      select t2a from t2
        where t2a in
        (
          select t3a from t3
            where t3a in
            (
               select t4a from t4
                 where t4a < any(select t5c from t5)
            )
        )
    )
) dt;
eval $q;
eval prepare s from '$q';
execute s;
execute s;


--echo tower, no wrapper + reference to first level select
let $q=
  select * from t1
    where t1c in
    (
      select t2a from t2
        where t2a in
        (
          select t3a from t3
            where t3a in
            (
               select t4a from t4
                 where t4a < any(select t5c from t5 where t5a > t1a)
            )
        )
    );
eval $q;
eval prepare s from '$q';
execute s;
execute s;


let $q=
  select * from t1
    where t1c in
    (
       select t4a from t4
         join t2 on t2a = t4a
         join t3 on t3a < any(select t5c from t5 where t2a > 0)
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

let $q=select * from
(
  select * from t1
    where t1c in
    (
       select t4a from t4
         join t2 on t2a = t4a
         join t3 on t3a = (select min(t5c) from t5 where t2a > 0)
    )
) dt;
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo tallest tower
let $q=select * from
(
  select * from t1
    where t1c in
    (
       select t4a from t4
         join t2 on t2a = t4a
         join t3 on t3b > 0 and t3a = (select min(t5c) from t5 where t2a > 0)
    )
) dt;
eval $q;
eval prepare s from '$q';
execute s;
execute s;

let $q=
  select * from t1
    where t1c in
    (
       select t4a from t4
         left join t2 on t2a = t4a
         join t3 on t3b > 0 and t3a = (select min(t5c) from t5 where t2a > 0)
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

let $q=
  select * from t1
    where t1c in
    (
       select t4a from t4
         left join t2 on t2a = t4a
         join t3 on t3b > 0 and t3a = (select min(t5c) from t5
                                     where (select min(t2a+t6a) from t6) > 0)
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

let $q=
  select * from t1
    where t1c in
    (
       select t4a from t4
         join t2 on t2a = t4a
         left join t3 on t3a = (select min(t5c) from t5 where t2a > 0)
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

let $q=
  select * from t1
    where t1c in
    (
      select t2a from 
      ( select t2a from t2
          where t2a in
          (
            select t3a from t3
              where t3a in
              (
                 select t4a from t4
                   where t4a < any(select t5c from t5 where t5a > t2a)
              )
          )
      ) dt2
    );
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo tallest tower, internal wrapper + reference to first internal select
let $q=
  select * from t1
    where t1c in
    (
      select * from
      (
        select t2a from (select * from t2) table2
          where t2a in
          (
            select t3a from t3
              where t3a in
              (
                 select t4a from t4
                   where t4a < any(select t5c from t5 where t5a > t2a)
              )
          )
      ) dt
    );
eval $q;
eval prepare s from '$q';
execute s;
execute s;


--echo with having
let $q=
  select * from t1
     where t1a in
     (
       select t2a from t2
       where ( select t3b from t3 where t3b < 3 group by t1a having t1a > 0 )
     );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

--echo tower, internal wrapper 1
let $q=
select * from t1
  where t1c in
  (
    select t2a from t2
      where t2a in
      (
        select * from
        (
          select t3a from t3
            where t3a in
            (
              select t4a from t4
                where t4a < any(select t5c from t5 group by t3a having t3a > 0)
            )
        ) dt
      )
  );
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo tower, internal wrapper 2
let $q=
select * from t1
  where t1c in
  (
    select * from
    (
      select t2a from t2
        where t2a in
        (
          select t3a from t3
            where t3a in
            (
              select t4a from t4
                where t4a < any(select t5c from t5 group by t3a having t3a > 0)
            )
        )
    ) dt
  );
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo crashes on first execution having -> where, refix -> boom
let $q=
  select * from t1
     where t1a in
     (
       select t2a from t2
       where ( select t3b from t3 where t3b < 3 group by t2a having t2a > 0 )
     );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

--echo tower, internal wrapper 
let $q=
select * from t1
  where t1c in
  (
    select * from
    (
      select t2a from t2
        where t2a in
        (
          select t3a from t3
            where t3a in
            (
              select t4a from t4
                where t4a < any(select t5c from t5 group by t5a
                               having t5a > t3a)
            )
        )
    ) dt
  );
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo tower, internal wrapper + reference to wrapped second internal select
let $q=
  select * from t1
    where t1c in
    (
      select * from
      (
        select t2a from t2
          where t2a in
          (
            select t3a from (select * from t3) table3
              where t3a in
              (
                 select t4a from t4
                   where t4a < any(select t5c from t5 where t5a > table3.t3a)
              )
          )
      ) dt
    );
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo tower, internal wrapper + reference to wrapped second internal select
let $q=
  select * from t1
    where t1c in
    (
      select * from
      (
        select t2a from t2
          where t2a in
          (
            select t3a from (select * from t3) table3
              where t3a in
              (
                 select t4a from t4
                   where t4a < any(select t5c from t5 where t5a > t3a)
              )
          )
      ) dt
    );
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo tallest tower, internal wrapper + reference to second internal select
let $q=
  select * from t1
    where t1c in
    (
      select * from
      (
        select t2a from t2
          where t2a in
          (
            select t3a from t3
              where t3a in
              (
                 select t4a from t4
                   where t4a < any(select t5c from t5 where t5a > t3a)
              )
          )
      ) dt
    );
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo tallest tower + reference to third level select
let $q=select * from
(
  select * from t1
    where t1c in
    (
      select t2a from t2
        where t2a in
        (
          select t3a from t3
            where t3a in
            (
               select t4a from t4
                 where t4a < any(select t5c from t5 where t5a > t3a)
            )
        )
    )
) dt;
eval $q;
eval prepare s from '$q';
execute s;
execute s;

--echo tower + reference to second level select
let $q=
  select * from t1
    where t1c in
    (
      select t2a from t2
        where t2a in
        (
          select t3a from t3
            where t3a in
            (
               select t4a from t4
                 where t4a < any(select t5c from t5 where t5a > t2a)
            )
        )
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;


--echo tallest tower + reference to upper select
let $q=
  select * from t1
    where t1c in
    (
      select t2a from t2
        where t2a in
        (
          select t3a from t3
            where t3a in
            (
               select t4a from t4
                 where t4a < any(select t5c from t5 where t5a > t4a)
            )
        )
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

--echo basic tower + reference to top select
let $q=
  select * from t1
    where t1c in
    (
       select t2a from t2
         where t2a < any(select t3b from t3 where t1a > 2)
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

--echo reference to middle select
let $q=
  select * from t1
    where t1c in
    (
       select t2a from t2
         where t2a < any(select t3b from t3 where t2a > 2)
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

let $q=
  select * from t1
    where t1c in
    (
       select t2a from t2
         where (select t3b from t3 where t3a > t2a limit 1) <> 0
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

let $q=
  select * from t1
    where t1c in
    (
       select t2a from t2
         where ( select min(t3b) from t3 where t1a > 2 and t2b < 2 ) <> 0
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

let $q=
  select * from t1
    where t1c in
    (
       select t2a from t2
         where ( select t3b from t3 where t1a > 2 and t3b < 2 ) <> 0
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

let $q=
  select * from t1
    where t1c in
    (
       select t2a from t2
         where ( select min(t3b) from t3 where t1a > 2 and t2b < 2 ) <> 0
    );

let $oq=select * from ($q) dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

let $oq=with dt as ($q) select * from dt;
eval $oq;
eval prepare s from '$oq';
execute s;
execute s;

eval create view v1 as $q;
select * from v1;
prepare s from 'select * from v1';
execute s;
execute s;
drop view v1;

select t1a from t1
where t1a in
(
  select t2c from t2 where t2a >= some
  (
    select t3a from t3 where t1b=t3b
  )
);

select t1a from t1
where t1a in
(
  select t2c from t2 where t2a >= some
  (
    select t3a from t3 where t1b=t3b
    union
    select t4a from t4 where t1a=t4b
  )
  union
  select t4c from t4 where t4a >= some
  (
    select t5a from t5 where t1c=t5b
  )
);

select t1a from t1
where t1a in
(
  select t2c from t2 where t2a >= some
  (
    select t3a from t3 where t1b=t3b
    union
    select t4a from t4 where t1a=t4b
  )
  union
  select (select t5a from t5 where t1c=t5b) from t4
);

select t1a from t1
where t1a in
(
  select t2c from t2 where t2a >= some
  (
    select t3a from t3 where t1b=t3b
    union
    select t4a from t4 where t1a=t4b
  )
  union
  select (select t5a from t5 where t1c=t5b and t4c) from t4
);

select t1a from t1
where t1a in
(
  select (select t5a from t5 where t1c=t5b and t4c) from t4 group by t1a
);

select t1a from t1
where t1a in
(
  select (select t5a from t5 where t1c=t5b and t4c) from t4 group by t1b
);


select t1a, t1b from (select t1a, t1b from t1) dt1
where t1a in
(
  select t2c from t2 where t2a >= some
  (
    select t3a from t3 where dt1.t1b=t3b
  )
);


create view v1 as select t1a, t1b from (select t1a, t1b from t1) dt1
where t1a in
(
  select t2c from t2 where t2a >= some
  (
    select t3a from t3 where dt1.t1b=t3b
  )
);

create table ambiguous like t1;
insert into ambiguous values (1, 1, 1);

select t1a from t1
where t1a in
(
  select t1a from ambiguous where t1a >= some
  (
    select t3a from t3 where t1a=t3b
  )
);

select t1a from t1
where t1a in
(
  select (select t1a from ambiguous) from t2 where t1a >= some
  (
    select t3a from t3 where t1a=t3b
  )
);

select t1a from t1
where (select t1a from ambiguous) in
(
  select (select t1a from ambiguous) from t2 where t1a >= some
  (
    select t3a from t3 where t1a=t3b
  )
);

select t1a from t1
where (select t2a from t2 where t2a > any (select t3a from t3 where t1a=t3b) order by t1a limit 1 ) in
(
  select (select t1a from ambiguous) from t2 where t1a >= some
  (
    select t3a from t3 where t1a=t3b
  )
);


select t1a from t1
where (select t2a from t2 where t2a > any (select t3a from t3 where t1a=t3b) order by t1a limit 1 ) > any
(
  select (select t1a from ambiguous) from t2 where t1a >= some
  (
    select t3a from t3 where t1a=t3b
  )
);

select * from
(
  select t1a from t1
  where (select t2a from t2 where t2a > any (select t3a from t3 where t1a=t3b) order by t1a limit 1 ) > any
  (
    select (select t1a from ambiguous) from (select t1a from t1) dt where t1a >= some
    (
      select t3a from t3 where t1a=t3b
    )
  )
) dt;

select t1a, t1b from ( select * from t1 ) dt
where (select t2a from t2 where t2a > any (select t3a from t3 where t1a=t3b) order by t1a limit 1 ) > any
(
  select (select t1a from ambiguous) from (select t1a from t1) dt where t1a >= some
  (
    select t3a from t3 where t1a=t3b
  )
);

select t1a, t1b from ( select * from t1 ) dt
where (select t2a from t2 where t2a > any (select t3a from t3 where t1a=t3b) order by t1a limit 1 ) > any
(
  select (select t1a from ambiguous) from (select t1a from t1) dt where t1a >= some
  (
    select (select t3a from t3 where t1a=t3b) from t4 where t1a >= t4a
  )
);

select t1a from t1
where t1a in
(
  select t2c from t2 where t2a >= some
  (
    select t3a from t3 where t3b in
    (
      select t4a from t4 order by t4b
    )
    union
    select t5a from t5 where t5b in
    (
      select t6a from t6 where t6b in
      (
        select t7a from t7 where t7b >= t1c and t7c >= t2c
      )
    )
  )
);

select t1a from t1
where t1a in
(
  select t2a from t2 where t2b >= some
  (
    select t3a from t3 where t3b in
    (
      select t4a from t4 where t4b >= t1a and t4c in
      (
        select t6a from t6  where t6b >= t2b
      )
      union
      select t4a from t4 where t4a > t1a
    )
  )
);

select t1a from t1
where t1a in
(
  select t2a from t2 where t1b >= some
  (
    select t3a from t3 where t3b in
    (
      select t4a from t4 where t4b >= t1a and t4c in
      (
        select t6a from t6  where t6b >= t2b
      )
      union
      select t4a from t4 where t4a > t1a
    )
  )
);

select *  from t1, t2                                   -- select #1
where
t1a in
(
  select t3b from t3                                    -- select #2
  where 10 >
  (
    select count(*) from t4 where t4b < t1a             -- select #3
  )
)
and 
t2a in
(
  select t5c from t5                                    -- select #4
  where 10 >
  (
    select count(*) from t6 where t6b < t2a             -- select #5
  )
);

drop view v1;

create view v1 (v1a, v1b) as select t1a, t1b from t1;

--echo # tests for Item_subselect::used_tables_cache

--echo # mergeable outer reference

select * from v1 where v1a in
(
  select t2a from t2 where t2b >= v1b
);

--echo # non mergeable outer reference

select * from v1 where v1a >= any
(
  select t2a from t2 where t2b >= v1b
);

select * from
(
  select t1a, t1b from t1
) dt
where
t1a in
(
  select t2a from t2 where t2b >= t1b
);

select t1a + t1b as c1 from t1 where t1c in
(
  select t2c from t2 where t2b >= c1
);

select
(
  select sum(t2a) from t2 where t2b > t1a group by t1b limit 1
),
t1b from t1;

// do not leave this here like this
SELECT
(
  SELECT SUM(t2a+t2b) FROM t2 where t1b=t2b GROUP BY t1a LIMIT 1
) as scalar_s,
exists
(
  select 1 from t2 where t2a/2=t1a
) as exists_s,
t1a in (select t2a+3 from t2) as in_s,
(
  t1a-1, t1b-1
) in (select t2a, t2b from t2) as in_row_s
FROM t1, (select t2a x, t2b y from t2) tt WHERE x=t1a


--echo # exists to in pulls t3a out of subquery
--echo # Item_subselect::used_tables_cache should NOT include map from t3a
--echo # Item_exists_subselect::exists2in_processor explicity sets upper_refs

select * from t3 
where not exists
(
  select 1 from t1, t2 where t1b=t2b and t2a=t3a
) and t3a is null;


--echo # we need to include something that actually shows up a non trivial bitmap (not 1 or 3)
--echo # table_list in top level query is {t1,t2,t3,t5}, we expect a bitmap of the
--echo # Item_subselect to be {t3,t5} so MSB 1st will be 0b1100

select t1a, t2a, t3a,
(
  select max(t4a) from t4 where t4a >= t3a and t4b >= t5b
), t5a
from t1, t2, t3, t5 where t1b = t5b and t2c != t3c;

select t1a as col1, t1b as col2 from t1 group by (select col1) order by col1;


drop view v1;

drop table t1,t2,t3,t4,t5,t6,t7,ambiguous;

--echo # end of 10.5 tests
